{"name": "test_goods_detail[data0]", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"int\") to str", "trace": "self = <testcase.good_center.test_goods_detail.Test_goods_detail object at 0x10a388ee0>\ndata = {'goods': 55}\nlogin_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxNjg4OTIsInVzZXJuYW1lIjoiMTU4MTk3NDk1NTIiLCJleHAiOjE3NDA5MjI5NzQsImVtYWlsIjpudWxsfQ.DUHfcURO98J7BQhgwQTjl7hiTaMh0U0V1Xw2SnyBf2E'\nfun = None\n\n    @allure.story('查看商品详情')\n    @allure.severity('blocker')\n    @pytest.mark.parametrize('data', base_data.read_data('good_data.yaml')['goods_detail'])\n    def test_goods_detail(self, data, login_fixture, fun):\n        token = login_fixture\n        with allure.step('请求查看商品详情接口'):\n>           result = Test_good_center().goods_detail_api(data, token)\n\ntest_goods_detail.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../api/good_scnter_api.py:25: in goods_detail_api\n    response = goods_detail(data, token)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = {'goods': 55}\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxNjg4OTIsInVzZXJuYW1lIjoiMTU4MTk3NDk1NTIiLCJleHAiOjE3NDA5MjI5NzQsImVtYWlsIjpudWxsfQ.DUHfcURO98J7BQhgwQTjl7hiTaMh0U0V1Xw2SnyBf2E'\n\n    def goods_detail(data, token):\n>       return request('/goods/' + data['goods'] + '/', 'GET', params=data, headers={'authorization': 'JWT ' + token})\nE       TypeError: can only concatenate str (not \"int\") to str\n\n../../common/api_url.py:19: TypeError"}, "steps": [{"name": "请求查看商品详情接口", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"int\") to str\n", "trace": "  File \"/Users/xiaotuji/PycharmProjects/Meikefresh/testcase/good_center/test_goods_detail.py\", line 50, in test_goods_detail\n    result = Test_good_center().goods_detail_api(data, token)\n  File \"/Users/xiaotuji/PycharmProjects/Meikefresh/api/good_scnter_api.py\", line 25, in goods_detail_api\n    response = goods_detail(data, token)\n  File \"/Users/xiaotuji/PycharmProjects/Meikefresh/common/api_url.py\", line 19, in goods_detail\n    return request('/goods/' + data['goods'] + '/', 'GET', params=data, headers={'authorization': 'JWT ' + token})\n"}, "start": 1740318174530, "stop": 1740318174530}], "attachments": [{"name": "log", "source": "6efdc015-6007-42d0-901a-d32ba7745325-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'goods': 55}"}], "start": 1740318174530, "stop": 1740318174531, "uuid": "3538b824-31ff-4206-a52e-771e34afa2df", "historyId": "2298914abd247ae8abb7de481a010ad3", "testCaseId": "c92786530ce6edd3fca3daa29426062d", "fullName": "testcase.good_center.test_goods_detail.Test_goods_detail#test_goods_detail", "labels": [{"name": "epic", "value": "商品管理"}, {"name": "severity", "value": "blocker"}, {"name": "story", "value": "查看商品详情"}, {"name": "feature", "value": "商品详情页"}, {"name": "parentSuite", "value": "testcase.good_center"}, {"name": "suite", "value": "test_goods_detail"}, {"name": "subSuite", "value": "Test_goods_detail"}, {"name": "host", "value": "xiaotujideMacBook-Pro.local"}, {"name": "thread", "value": "7219-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.good_center.test_goods_detail"}]}